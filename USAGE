=======================================
Usage
=======================================
The initramfs script is very easy to use.

1. Creating the initramfs

Just clone it or extract it into a directory and cd into it.

Run the script by running: ./createInit
* It must be run as root since root is the only user that can run `depmod`.

* If the script doesn't run and gives you a permission denied message,
  give it execution permission: `chmod +x createInit` and then try again.

Select the option that you want, and tell it which kernel you want to use.

After that the required files will be gathered and packed into an initramfs.

You will find the initramfs in the directory that you are currently in.
Copy the file to your boot directory and name it whatever you want.

2. Setting it up in the bootloader

If my initramfs is called: initrd-zfs.img and my bootloader is extlinux,
I would do the following

(open up the bootloader config (for extlinux it's extlinux.conf)

`vim /boot/extlinux/extlinux.conf`

and add a new entry:

LABEL gentoo
	MENU LABEL Gentoo [3.7.1-ZFS]
	LINUX /vmlinuz-3.7.1-ZFS
	INITRD /initrd-zfs.img
	APPEND pool_name=rpool
	
This would boot my `rpool` zpool. `poolname` is the kernel parameter to declare
the zpool that you want to boot into.

=======================================
Kernel Options:
=======================================
ZFS:
pool_name - ZFS pool name
	example: APPEND pool_name=rpool

cache_size - Sets the ARC cache size (in bytes)
	example: APPEND cache_size=536870912
	 this sets the cache_size to 512MB

So a complete line could look like this:
 APPEND cache_size=536870912 pool_name=rpool
 
 Which would mount the `rpool` ZFS pool with the arc_max being 512 MB

LUKS + ZFS:
Follow the same instructions as above, but also add "enc_root=" to your
kernel line.

enc_root - Encrypted root drive
	example: APPEND enc_root=/dev/sda2
